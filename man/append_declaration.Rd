% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/code-append.R
\name{append_declaration}
\alias{append_declaration}
\title{Append declarations to code block}
\usage{
append_declaration(x, ..., after = length(x), dots = list())
}
\arguments{
\item{x}{code block to append to}

\item{...}{a named list of variables to create declarations for. currently
only objects of a subset of types get instantiated: 
\itemize{
\item{reactivevalues (via \code{\link[shiny]{reactiveValuesToList}()})}
\item{atomic} 
\item{numeric} 
\item{character}
}}

\item{after}{position at which to insert declaration code}

\item{dots}{alternative passing of ellipses arguments}
}
\value{
reconstructed code with declarations inserted
}
\description{
appends all ellipses or dots arguments to code at specified
  location, reconstructing code to initialize variables in the code block.
}
\examples{
code <- quote({
  a <- tolower(a)
  b <- b[[1]]
  c <- tolower(c)
  print(sprintf('this is \%s \%dst \%s', a, b, c))
})

scriptgloss:::append_declaration(as.list(code)[-1], 
    a = 'my', 
    b = list(1,2,3),
    c = 'example', after = 0)

}
